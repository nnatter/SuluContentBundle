# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2

.environment_variables: &environment_variables
    METHOD_COVERAGE_THRESHOLD: 95
    APP_ENV: test
    DATABASE_URL: mysql://root:root@127.0.0.1:3306/su_content_test
    DATABASE_CHARSET: utf8mb4
    DATABASE_COLLATE: utf8mb4_unicode_ci

workflows:
    version: 2
    default:
        jobs:
            - composer
            - lint:
                requires:
                    - composer
            - test-unit:
                requires:
                    - composer
            - test-functional:
                requires:
                    - composer

jobs:
    composer:
        docker:
            - image: composer:latest
        steps:
            - checkout
            - restore_cache:
                keys:
                    - v4-composer-cache-{{ checksum "composer.json" }}
                    - v4-composer-cache-
            - run: composer install -n --prefer-dist --ignore-platform-reqs --no-scripts
            - run: curl --show-error --silent https://getcomposer.org/installer | php
            - run: ls ~/.composer/cache
            - save_cache:
                paths:
                    - ~/.composer/cache
                key: v4-composer-cache-{{ checksum "composer.json" }}
            - persist_to_workspace:
                  root: .
                  paths:
                      - vendor
                      - composer.phar
                      - composer.lock
    lint:
        docker:
            - image: sulu/php:7.2-cli
            - image: mysql:5.7
              environment:
                  MYSQL_ROOT_PASSWORD: root
        environment: *environment_variables
        steps:
            - run: echo "waiting for mysql container startup" && sleep 5
            - checkout
            - attach_workspace:
                  at: .
            - run: php composer.phar bootstrap-test-environment
            - run: php Tests/Application/bin/console doctrine:database:create --if-not-exists -e prod
            - run: php composer.phar lint
    test-unit:
        docker:
            - image: sulu/php:7.2-cli
        environment: *environment_variables
        steps:
            - checkout
            - attach_workspace:
                at: .
            - run: docker-php-ext-enable xdebug
            - run: php composer.phar test -- Tests/Unit --coverage-php var/coverage.php --coverage-html coverage-report --log-junit var/junit.xml
            - store_artifacts:
                path: coverage-report
            - store_test_results:
                path: var
            - run: php Tests/coverage-checker.php "line" "project/Model" "$METHOD_COVERAGE_THRESHOLD"
    test-functional:
        docker:
            - image: sulu/php:7.2-cli
            - image: mysql:5.7
              environment:
                  MYSQL_ROOT_PASSWORD: root
        environment: *environment_variables
        steps:
            - run: echo "waiting for mysql container startup" && sleep 5
            - checkout
            - attach_workspace:
                  at: .
            - run: php composer.phar bootstrap-test-environment
            - run: php composer.phar test -- Tests/Functional --log-junit var/junit.xml
            - store_test_results:
                  path: var
